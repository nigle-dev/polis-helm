{{ if .Values.postgresql.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: polis-postgres
  name: polis-postgres
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: polis-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: polis-postgres
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: polis-configmap
        image: nigledev/16-bookworm
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
              ["pg_isready", "-U", "{{ .Values.postgresql.auth.user }}", "-d", "{{ .Values.postgresql.auth.database }}"]
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: postgres
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgresql-data
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
{{ end }}
